================================================================================
WEKA DATA PREPROCESSING INSTRUCTIONS
Philippine Labor Market Data Mining Project
================================================================================

OVERVIEW
--------
This document provides step-by-step instructions for preprocessing the Philippine
labor market data in WEKA before importing it into the Python application for
analysis and forecasting.

DATA SOURCE
-----------
Philippine Statistics Authority (PSA) Labor Force Survey
URL: https://openstat.psa.gov.ph/PXWeb/pxweb/en/DB/DB__1B__LFS/0011B3ALFS0.px/

REQUIRED DATA FORMAT
--------------------
The data should contain the following columns:
1. Quarter (e.g., "2014 Q1", "2014 Q2", etc.)
2. Labor Force Participation Rate (LFPR) - percentage
3. Employment Rate (ER) - percentage
4. Unemployment Rate (UR) - percentage
5. Underemployment Rate (UER) - percentage

================================================================================
STEP 1: DATA COLLECTION AND IMPORT
================================================================================

1.1 Download Data from PSA
   - Navigate to the PSA OpenStat database
   - Select the Labor Force Survey (LFS) dataset
   - Choose the time period: 2014 Q1 to 2024 Q4
   - Download as CSV or Excel format

1.2 Import into WEKA
   - Open WEKA Explorer
   - Click "Open file..." button
   - Select your downloaded CSV/Excel file
   - WEKA will automatically detect the file format

================================================================================
STEP 2: DATA VALIDATION AND QUALITY CHECKS
================================================================================

2.1 Check for Missing Values
   - In WEKA Explorer, go to "Preprocess" tab
   - Look at the "Selected attribute" panel
   - Check "Missing" column for each attribute
   - If missing values exist:
     * For time series data, DO NOT use simple mean imputation
     * Use "ReplaceMissingValues" filter with interpolation
     * Filter path: weka.filters.unsupervised.attribute.ReplaceMissingValues

2.2 Validate Data Ranges
   - All percentage values should be between 0 and 100
   - Use "AddExpression" filter to create validation columns
   - Filter path: weka.filters.unsupervised.attribute.AddExpression
   - Expression examples:
     * Check LFPR: (LFPR >= 0) && (LFPR <= 100)
     * Check ER: (ER >= 0) && (ER <= 100)
     * Check UR: (UR >= 0) && (UR <= 100)
     * Check UER: (UER >= 0) && (UER <= 100)

2.3 Verify Mathematical Consistency
   - Employment Rate + Unemployment Rate should approximately equal 100
   - Create a validation column: ER + UR
   - Values should be close to 100 (Â±1% tolerance acceptable)

================================================================================
STEP 3: OUTLIER DETECTION
================================================================================

3.1 Statistical Outlier Detection
   - Use "InterquartileRange" filter
   - Filter path: weka.filters.unsupervised.attribute.InterquartileRange
   - Settings:
     * Outlier factor: 1.5 (standard IQR method)
     * Extreme value factor: 3.0
   - Review flagged outliers manually

3.2 Domain Knowledge Validation
   - DO NOT automatically remove outliers
   - Verify against known economic events:
     * COVID-19 pandemic (2020 Q1 - 2022 Q4): Expect unusual values
     * Natural disasters: Typhoons, earthquakes
     * Policy changes: Tax reforms, labor law changes
   - Keep legitimate outliers that correspond to real events

3.3 Time Series Specific Outlier Detection
   - Use "TimeSeriesOutlierDetection" if available
   - Or manually inspect using visualization:
     * Go to "Visualize" tab
     * Create time series plots for each indicator
     * Look for sudden spikes or drops

================================================================================
STEP 4: DATA TRANSFORMATION
================================================================================

4.1 Date/Time Formatting
   - Ensure Quarter column is in consistent format
   - Recommended format: "YYYY QX" (e.g., "2014 Q1")
   - Use "StringToNominal" filter if needed
   - Filter path: weka.filters.unsupervised.attribute.StringToNominal

4.2 Create Temporal Features (Optional but Recommended)
   - Add Year column: Extract year from Quarter
   - Add Quarter Number column: 1, 2, 3, or 4
   - Use "AddExpression" filter
   - These features help with seasonal analysis

4.3 Normalize/Standardize (DO NOT DO THIS IN WEKA)
   - DO NOT normalize or standardize in WEKA
   - The Python application will handle this
   - Keep original percentage values

================================================================================
STEP 5: DATA SORTING AND ORDERING
================================================================================

5.1 Sort by Time
   - CRITICAL: Data must be in chronological order
   - Use "Sort" filter
   - Filter path: weka.filters.unsupervised.instance.Sort
   - Sort by Quarter column in ascending order

5.2 Verify Temporal Continuity
   - Check that all quarters are present
   - No gaps in the time series
   - If gaps exist, decide on interpolation strategy:
     * Linear interpolation for short gaps (1-2 quarters)
     * Do not interpolate long gaps (>2 quarters)

================================================================================
STEP 6: FEATURE ENGINEERING (OPTIONAL)
================================================================================

6.1 Lagged Variables
   - Create lagged versions of indicators for autoregression
   - Use "AddExpression" or "TimeSeriesTranslate" filter
   - Example: LFPR_lag1, LFPR_lag2, etc.
   - Recommended lags: 1, 2, 4 (1 quarter, 2 quarters, 1 year)

6.2 Moving Averages
   - Create moving average features
   - Use "MovingAverage" filter if available
   - Window sizes: 2, 4 (half-year, full-year)

6.3 Rate of Change
   - Calculate quarter-over-quarter changes
   - Formula: (Current - Previous) / Previous * 100
   - Use "AddExpression" filter

================================================================================
STEP 7: FINAL VALIDATION AND EXPORT
================================================================================

7.1 Final Data Quality Check
   - Review summary statistics in WEKA
   - Check minimum, maximum, mean, std dev for each attribute
   - Ensure no unexpected values

7.2 Export Preprocessed Data
   - Go to "Preprocess" tab
   - Click "Save..." button
   - Save as CSV format (recommended)
   - Naming convention: "labor_market_data_preprocessed.csv"

7.3 Create Data Dictionary
   - Document any transformations applied
   - Note any outliers kept or removed
   - Record date range and number of instances

================================================================================
STEP 8: IMPORT INTO PYTHON APPLICATION
================================================================================

8.1 File Placement
   - Place the preprocessed CSV file in the "data/raw/" directory
   - The Python application will automatically detect it

8.2 Verify Import
   - Run the Python application
   - Use "Load Data" button in the GUI
   - Check the data preview panel
   - Verify all columns are correctly imported

================================================================================
COMMON ISSUES AND TROUBLESHOOTING
================================================================================

Issue 1: WEKA Cannot Open File
Solution: 
   - Ensure file is in CSV format with comma separators
   - Check for special characters in column names
   - Try opening in Excel first to verify format

Issue 2: Missing Values Not Detected
Solution:
   - Check if missing values are represented as "?", "NA", or empty cells
   - WEKA recognizes "?" as missing by default
   - Use Find & Replace in Excel to convert other formats to "?"

Issue 3: Date Column Not Recognized
Solution:
   - Convert date column to string format in Excel
   - Use consistent format throughout
   - WEKA treats dates as nominal or string attributes

Issue 4: Outliers Flagged Incorrectly
Solution:
   - Adjust IQR outlier factor (try 2.0 or 2.5 instead of 1.5)
   - Use domain knowledge to validate
   - Consider seasonal patterns before removing

Issue 5: Data Not Sorting Correctly
Solution:
   - Ensure Quarter column is in sortable format
   - Consider creating a numeric index column (1, 2, 3, ...)
   - Sort by this index instead

================================================================================
BEST PRACTICES
================================================================================

1. Always keep a backup of the original raw data
2. Document every preprocessing step in a log file
3. Use descriptive file names with version numbers
4. Validate data after each transformation step
5. Do not over-process the data - keep it as close to original as possible
6. For time series, preserve temporal order at all costs
7. When in doubt, consult the research paper methodology (Section III)

================================================================================
ADDITIONAL RESOURCES
================================================================================

WEKA Documentation: https://www.cs.waikato.ac.nz/ml/weka/documentation.html
WEKA Filters Guide: https://weka.sourceforge.io/doc.dev/weka/filters/Filter.html
Time Series Analysis in WEKA: https://weka.sourceforge.io/doc.packages/timeseriesForecasting

For questions or issues, refer to the Python application's README.md file.

================================================================================
END OF PREPROCESSING INSTRUCTIONS
================================================================================
